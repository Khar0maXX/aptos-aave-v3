name: Testnet Deployment

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network'
        required: true
        default: 'testnet'
        type: choice
        options:
          - testnet
          - devnet
      initData:
        description: 'Initialize Data'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  testnet-deployment:
    name: Deploy protocol on Testnet
    runs-on: Larger-Github-Runners
    timeout-minutes: 60
    env:
      # common settings
      CARGO_TERM_COLOR: always
      GITHUB_ACTIONS: true
      MOVE_VERSION: 2.1
      COMPILER_VERSION: 2.0
      ARTIFACTS_LEVEL: all
      DEFAULT_FUND_AMOUNT: 100000000
      APTOS_NETWORK: ${{ github.event.inputs.network }}
      DEFAULT_FUNDER_PRIVATE_KEY: ${{ secrets.GH_DEFAULT_FUNDER_PRIVATE_KEY }}
      NODE_API_KEY: ${{ secrets.GH_NODE_API_KEY }}

      # external profiles
      CHAINLINK_DATA_FEEDS: ${{ secrets.GH_CHAINLINK_DATA_FEEDS }}
      CHAINLINK_PLATFORM: ${{ secrets.GH_CHAINLINK_PLATFORM }}

      # aave profiles
      AAVE_ACL_PRIVATE_KEY: ${{ secrets.GH_AAVE_ACL_PRIVATE_KEY }}
      AAVE_CONFIG_PRIVATE_KEY: ${{ secrets.GH_AAVE_CONFIG_PRIVATE_KEY }}
      AAVE_MATH_PRIVATE_KEY: ${{ secrets.GH_AAVE_MATH_PRIVATE_KEY }}
      AAVE_ORACLE_PRIVATE_KEY: ${{ secrets.GH_AAVE_ORACLE_PRIVATE_KEY }}
      AAVE_POOL_PRIVATE_KEY: ${{ secrets.GH_AAVE_POOL_PRIVATE_KEY }}
      AAVE_MOCK_UNDERLYING_TOKENS_PRIVATE_KEY: ${{ secrets.GH_AAVE_MOCK_UNDERLYING_TOKENS_PRIVATE_KEY }}
      AAVE_LARGE_PACKAGES_PRIVATE_KEY: ${{ secrets.GH_AAVE_LARGE_PACKAGES_PRIVATE_KEY }}
      AAVE_DATA_PRIVATE_KEY: ${{ secrets.GH_AAVE_DATA_PRIVATE_KEY }}
      AAVE_POOL_ADMIN_MULTISIG_ADDRESS: ${{ secrets.GH_AAVE_POOL_ADMIN_MULTISIG_ADDRESS }}
      AAVE_POOL_ADMIN_PRIVATE_KEY: ${{ secrets.GH_AAVE_POOL_ADMIN_PRIVATE_KEY }}
      # NOTE: do not set AAVE_DATA_FEEDS_PRIVATE_KEY and AAVE_PLATFORM_PRIVATE_KEY here as they are only for local dev mode

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt-get update -y

      - name: Install Aptos CLI
        uses: ./.github/actions/install-aptos-cli
        with:
          version: "6.2.0"

      - name: Set Aptos Workspace Config
        run: make set-workspace-config

      - name: Init Aptos Workspace Config
        run: make init-workspace-config

      - name: Run Aptos Create Profiles
        run: make init-profiles

      - name: Run Aptos Top-Up Profiles
        run: make top-up-profiles

      - name: Print Aptos Config File
        run: cat ./.aptos/config.yaml

      - name: Run Aptos Compile All Contracts
        run: make compile-all

#      - name: Run clear-staging-large-packages
#        run: make clear-staging-large-packages

      - name: Run Aptos Publish All Contracts
        run: make publish-all

      - name: Run Script - Configure Acl
        if: ${{ github.event.inputs.initData == 'true' }}
        run: make configure-acl && sleep 5

      - name: Run Script - Configure Emodes
        if: ${{ github.event.inputs.initData == 'true' }}
        run: make configure-emodes && sleep 5

      - name: Run Script - Create Reserves
        if: ${{ github.event.inputs.initData == 'true' }}
        run: make create-reserves && sleep 5

      - name: Run Script - Configure Reserves
        if: ${{ github.event.inputs.initData == 'true' }}
        run: make configure-reserves && sleep 5

      - name: Run Script - Configure Interest Rates
        if: ${{ github.event.inputs.initData == 'true' }}
        run: make configure-interest-rates && sleep 5

      - name: Run Script - Configure Price Feeds
        if: ${{ github.event.inputs.initData == 'true' }}
        run: make configure-price-feeds && sleep 5
